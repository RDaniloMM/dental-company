-- =================================================================
--      ESQUEMA MEJORADO PARA FICHA ODONTOLÓGICA (5TA FN)
-- =================================================================
-- Este script está diseñado para ser ejecutado en el editor SQL de Supabase.
-- Habilita la seguridad a nivel de fila (RLS) para todas las tablas,
-- lo cual es una práctica recomendada en Supabase.

-- -----------------------------------------------------------------
-- TABLA 1: PACIENTES
-- -----------------------------------------------------------------
-- Almacena la información demográfica básica de los pacientes.
-- Se vincula opcionalmente a la tabla `auth.users` si el paciente
-- tiene una cuenta de usuario en el sistema.
CREATE TABLE public.patients (
    id UUID DEFAULT gen_random_uuid() PRIMARY KEY,
    user_id UUID UNIQUE REFERENCES auth.users(id) ON DELETE SET NULL,
    first_name TEXT NOT NULL,
    last_name TEXT NOT NULL,
    date_of_birth DATE NOT NULL,
    gender TEXT,
    address TEXT,
    phone_number TEXT,
    email TEXT UNIQUE,
    created_at TIMESTAMPTZ DEFAULT now() NOT NULL
);
ALTER TABLE public.patients ENABLE ROW LEVEL SECURITY;
COMMENT ON TABLE public.patients IS 'Información demográfica de los pacientes.';

-- -----------------------------------------------------------------
-- TABLA 2: FICHAS DENTALES (DENTAL RECORDS)
-- -----------------------------------------------------------------
-- Es la tabla central que representa la ficha odontológica de un paciente.
-- Cada paciente tendrá una única ficha.
CREATE TABLE public.dental_records (
    id UUID DEFAULT gen_random_uuid() PRIMARY KEY,
    patient_id UUID NOT NULL UNIQUE REFERENCES public.patients(id) ON DELETE CASCADE,
    creation_date DATE DEFAULT now() NOT NULL,
    last_updated TIMESTAMPTZ DEFAULT now() NOT NULL,
    general_notes TEXT -- Para observaciones generales de la ficha
);
ALTER TABLE public.dental_records ENABLE ROW LEVEL SECURITY;
COMMENT ON TABLE public.dental_records IS 'Ficha odontológica principal para cada paciente.';

-- -----------------------------------------------------------------
-- TABLA 3: ANAMNESIS (HISTORIAL MÉDICO)
-- -----------------------------------------------------------------
-- Almacena respuestas a preguntas específicas del historial médico.
-- Es una relación uno a muchos con la ficha dental.
CREATE TABLE public.anamnesis (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    record_id UUID NOT NULL REFERENCES public.dental_records(id) ON DELETE CASCADE,
    question TEXT NOT NULL, -- Ej: '¿Es alérgico a algún medicamento?'
    answer TEXT NOT NULL,   -- Ej: 'Sí'
    details TEXT            -- Ej: 'Alergia a la Penicilina'
);
ALTER TABLE public.anamnesis ENABLE ROW LEVEL SECURITY;
COMMENT ON TABLE public.anamnesis IS 'Historial médico y dental del paciente (preguntas y respuestas).';

-- -----------------------------------------------------------------
-- TABLAS MAESTRAS PARA ODONTOGRAMA (DATOS ESTÁTICOS)
-- -----------------------------------------------------------------
-- Estas tablas no cambiarán a menudo y sirven como catálogo.

-- Tabla de Dientes (Nomenclatura FDI)
CREATE TABLE public.teeth (
    id INT PRIMARY KEY, -- Nomenclatura FDI (ej: 11, 12, ..., 48)
    name TEXT NOT NULL,
    quadrant INT NOT NULL
);
ALTER TABLE public.teeth ENABLE ROW LEVEL SECURITY;
COMMENT ON TABLE public.teeth IS 'Catálogo maestro de dientes según nomenclatura FDI.';

-- Insertar los datos de los dientes (ejecutar una sola vez)
INSERT INTO public.teeth (id, name, quadrant) VALUES
(18, 'Tercer Molar Superior Derecho', 1), (17, 'Segundo Molar Superior Derecho', 1), (16, 'Primer Molar Superior Derecho', 1), (15, 'Segundo Premolar Superior Derecho', 1), (14, 'Primer Premolar Superior Derecho', 1), (13, 'Canino Superior Derecho', 1), (12, 'Incisivo Lateral Superior Derecho', 1), (11, 'Incisivo Central Superior Derecho', 1),
(21, 'Incisivo Central Superior Izquierdo', 2), (22, 'Incisivo Lateral Superior Izquierdo', 2), (23, 'Canino Superior Izquierdo', 2), (24, 'Primer Premolar Superior Izquierdo', 2), (25, 'Segundo Premolar Superior Izquierdo', 2), (26, 'Primer Molar Superior Izquierdo', 2), (27, 'Segundo Molar Superior Izquierdo', 2), (28, 'Tercer Molar Superior Izquierdo', 2),
(38, 'Tercer Molar Inferior Izquierdo', 3), (37, 'Segundo Molar Inferior Izquierdo', 3), (36, 'Primer Molar Inferior Izquierdo', 3), (35, 'Segundo Premolar Inferior Izquierdo', 3), (34, 'Primer Premolar Inferior Izquierdo', 3), (33, 'Canino Inferior Izquierdo', 3), (32, 'Incisivo Lateral Inferior Izquierdo', 3), (31, 'Incisivo Central Inferior Izquierdo', 3),
(41, 'Incisivo Central Inferior Derecho', 4), (42, 'Incisivo Lateral Inferior Derecho', 4), (43, 'Canino Inferior Derecho', 4), (44, 'Primer Premolar Inferior Derecho', 4), (45, 'Segundo Premolar Inferior Derecho', 4), (46, 'Primer Molar Inferior Derecho', 4), (47, 'Segundo Molar Inferior Derecho', 4), (48, 'Tercer Molar Inferior Derecho', 4);

-- Tabla de Hallazgos (Diagnósticos, Tratamientos, etc.)
CREATE TABLE public.findings (
    id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    code TEXT UNIQUE NOT NULL, -- Código corto, ej: 'C', 'A', 'PPR'
    description TEXT NOT NULL, -- ej: 'Caries', 'Amalgama', 'Prótesis Parcial Removible'
    type TEXT NOT NULL, -- ej: 'Diagnostico', 'Tratamiento'
    color_hex TEXT -- Color para representar en la UI del odontograma
);
ALTER TABLE public.findings ENABLE ROW LEVEL SECURITY;
COMMENT ON TABLE public.findings IS 'Catálogo de diagnósticos y tratamientos para el odontograma.';

-- Insertar algunos hallazgos comunes
INSERT INTO public.findings (code, description, type, color_hex) VALUES
('C', 'Caries', 'Diagnostico', '#FF0000'), -- Rojo
('A', 'Amalgama', 'Tratamiento', '#808080'), -- Gris
('R', 'Resina', 'Tratamiento', '#0000FF'), -- Azul
('S', 'Sano', 'Diagnostico', '#00FF00'), -- Verde
('X', 'Extraído', 'Diagnostico', '#000000'), -- Negro
('E', 'Endodoncia', 'Tratamiento', '#FFFF00'); -- Amarillo

-- -----------------------------------------------------------------
-- TABLA 4: ODONTOGRAMA
-- -----------------------------------------------------------------
-- Registra el estado de cada pieza dental en un momento dado.
-- Esta es la tabla más importante para la representación visual.
CREATE TABLE public.odontogram_entries (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    record_id UUID NOT NULL REFERENCES public.dental_records(id) ON DELETE CASCADE,
    tooth_id INT NOT NULL REFERENCES public.teeth(id),
    finding_id INT NOT NULL REFERENCES public.findings(id),
    -- Caras del diente afectadas (ej: 'O' para Oclusal, 'V' para Vestibular)
    -- Se puede almacenar como un array de caracteres: {'O', 'V'}
    surfaces CHAR(1)[],
    created_at TIMESTAMPTZ DEFAULT now() NOT NULL,
    notes TEXT
);
ALTER TABLE public.odontogram_entries ENABLE ROW LEVEL SECURITY;
COMMENT ON TABLE public.odontogram_entries IS 'Registros del odontograma para cada pieza dental.';

-- -----------------------------------------------------------------
-- TABLA 5: PLANES DE TRATAMIENTO
-- -----------------------------------------------------------------
-- Agrupa un conjunto de procedimientos propuestos para un paciente.
CREATE TABLE public.treatment_plans (
    id UUID DEFAULT gen_random_uuid() PRIMARY KEY,
    record_id UUID NOT NULL REFERENCES public.dental_records(id) ON DELETE CASCADE,
    name TEXT NOT NULL, -- Ej: 'Plan de Rehabilitación Inicial'
    status TEXT NOT NULL DEFAULT 'Propuesto', -- 'Propuesto', 'Aceptado', 'En Progreso', 'Completado'
    total_cost NUMERIC(10, 2),
    created_at TIMESTAMPTZ DEFAULT now() NOT NULL
);
ALTER TABLE public.treatment_plans ENABLE ROW LEVEL SECURITY;
COMMENT ON TABLE public.treatment_plans IS 'Planes de tratamiento propuestos para el paciente.';

-- -----------------------------------------------------------------
-- TABLA 6: DETALLES DEL PLAN DE TRATAMIENTO
-- -----------------------------------------------------------------
-- Cada uno de los procedimientos dentro de un plan de tratamiento.
CREATE TABLE public.treatment_plan_items (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    plan_id UUID NOT NULL REFERENCES public.treatment_plans(id) ON DELETE CASCADE,
    tooth_id INT REFERENCES public.teeth(id), -- Opcional, si el tratamiento es en un diente específico
    procedure_description TEXT NOT NULL, -- Ej: 'Restauración con resina en pieza 16'
    cost NUMERIC(10, 2) NOT NULL,
    status TEXT NOT NULL DEFAULT 'Pendiente' -- 'Pendiente', 'Realizado'
);
ALTER TABLE public.treatment_plan_items ENABLE ROW LEVEL SECURITY;
COMMENT ON TABLE public.treatment_plan_items IS 'Procedimientos individuales dentro de un plan de tratamiento.';

-- -----------------------------------------------------------------
-- TABLA 7: NOTAS DE EVOLUCIÓN (PROGRESO)
-- -----------------------------------------------------------------
-- Registro cronológico de cada cita y tratamiento realizado.
CREATE TABLE public.progress_notes (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    record_id UUID NOT NULL REFERENCES public.dental_records(id) ON DELETE CASCADE,
    dentist_id UUID REFERENCES auth.users(id), -- El dentista que realizó el tratamiento
    appointment_date TIMESTAMPTZ DEFAULT now() NOT NULL,
    treatment_performed TEXT NOT NULL,
    tooth_id INT REFERENCES public.teeth(id), -- Opcional
    observations TEXT
);
ALTER TABLE public.progress_notes ENABLE ROW LEVEL SECURITY;
COMMENT ON TABLE public.progress_notes IS 'Registro de la evolución y tratamientos realizados en cada cita.';
